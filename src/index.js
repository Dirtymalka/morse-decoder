const MORSE_TABLE = {
    '.-': 'a',
    '-...': 'b',
    '-.-.': 'c',
    '-..': 'd',
    '.': 'e',
    '..-.': 'f',
    '--.': 'g',
    '....': 'h',
    '..': 'i',
    '.---': 'j',
    '-.-': 'k',
    '.-..': 'l',
    '--': 'm',
    '-.': 'n',
    '---': 'o',
    '.--.': 'p',
    '--.-': 'q',
    '.-.': 'r',
    '...': 's',
    '-': 't',
    '..-': 'u',
    '...-': 'v',
    '.--': 'w',
    '-..-': 'x',
    '-.--': 'y',
    '--..': 'z',
    '.----': '1',
    '..---': '2',
    '...--': '3',
    '....-': '4',
    '.....': '5',
    '-....': '6',
    '--...': '7',
    '---..': '8',
    '----.': '9',
    '-----': '0',
};

function decode(expr) {
    let morse = {
        '0000001011': 'A',
        '0011101010': 'B',
        '0011101110': 'C',
        '0000111010': 'D',
        '0000000010': 'E',
        '0010101110': 'F',
        '0000111110': 'G',
        '0010101010': 'H',
        '0000001010': 'I',
        '0010111111': 'J',
        '0000111011': 'K',
        '0010111010': 'L',
        '0000001111': 'M',
        '0000001110': 'N',
        '0000111111': 'O',
        '0010111110': 'P',
        '0011111011': 'Q',
        '0000101110': 'R',
        '0000101010': 'S',
        '0000000011': 'T',
        '0000101011': 'U',
        '0010101011': 'V',
        '0000101111': 'W',
        '0011101011': 'X',
        '0011101111': 'Y',
        '0011111010': 'Z',
        '1011111111': '1',
        '1010111111': '2',
        '1010101111': '3',
        '1010101011': '4',
        '1010101010': '5',
        '1110101010': '6',
        '1111101010': '7',
        '1111111010': '8',
        '1111111110': '9',
        '1111111111': '0',
    }

    let arrKeys = Object.keys(morse);

    if (expr.length === 10) return morse[expr];

    let arrСipher = expr.split('**********');

    let result = '';

    for (let i = 0; i < arrСipher.length; i++) {
        let a = 0;
        let b = 10;
        for (let j = 0; j < arrKeys.length; j++) {
            if (~arrСipher[i].slice(a, b).indexOf(arrKeys[j])) {
                result += morse[arrKeys[j]];
                a += 10;
                b += 10;
                j = -1;
            }
        }
        result += ' ';
    }
    return result.toLowerCase().trim();
}

module.exports = {
    decode
}
